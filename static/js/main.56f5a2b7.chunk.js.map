{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","SetNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","width","height","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNeweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAeAA,IAASC,cAVc,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAYF,gBACZG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKJ,IAAMM,EAAmBT,IACnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,UC4CxBC,EA3DE,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEcF,mBAAS,IAFvB,mBAEZG,EAFY,KAEFC,EAFE,OAGiBJ,oBAAS,GAH1B,mBAGZK,EAHY,KAGAC,EAHA,OAION,mBAAS,IAJhB,mBAIZO,EAJY,KAILC,EAJK,KAMbC,EAAW,SAACC,GAAU,MAEQA,EAAzBC,OAASC,EAFQ,EAERA,KAAMC,EAFE,EAEFA,MACV,UAATD,EACCV,EAASW,GACO,aAATD,GACPR,EAAYS,IAGdC,EAAQ,uCAAG,WAAMJ,GAAN,eAAAK,EAAA,yDACbL,EAAMM,iBADO,UAILX,EAJK,gCAKIZ,EAAYwB,+BAA+BhB,EAAOE,GALtD,OAKTe,EALS,+CAOIzB,EAAY0B,2BAA2BlB,EAAOE,GAPlD,QAOTe,EAPS,eASbE,QAAQC,IAAIH,GATC,kDAWbV,EAAS,KAAMc,SAXF,0DAAH,sDAcd,OACI,qCACA,uBAAMR,SAAUA,EAAUS,UAAU,YAApC,UACI,uBAAOX,KAAK,QACZY,KAAK,QACLC,YAAY,QACZC,UAAQ,EAACb,MAAOZ,EAChBQ,SAAUA,EACVc,UAAU,cAEV,uBAAOX,KAAK,WACZY,KAAK,WACLC,YAAY,WACZC,UAAQ,EAACb,MAAOV,EAChBoB,UAAU,YACVd,SAAUA,IAEV,uBAAOe,KAAK,SACZD,UAAU,uBACVV,MAAOR,EAAa,iBAAmB,YAEtCE,GAAS,sBAAMgB,UAAU,YAAhB,SAA6BhB,OAE3C,sBAAMoB,QA/CY,kBAAMrB,GAAc,SAACsB,GAAD,OAAWA,MA+CnBL,UAAU,aAAxC,SACKlB,EAAa,UAAY,uB,gBCZvBwB,EAnCF,WAET,IAAMC,EAAa,uCAAG,WAAOpB,GAAP,iBAAAK,EAAA,4DAKL,YAHDH,EACRF,EADAC,OAAQC,MAIRmB,EAAW,IAAIvC,EAAiBE,KAAKsC,mBACrB,WAATpB,IACPmB,EAAW,IAAIvC,EAAiBE,KAAKuC,oBARvB,SAUZxC,EAAYyC,gBAAgBH,GAVhB,2CAAH,sDAanB,OACI,sBAAKR,UAAU,gBAAf,UACI,cAAC,IAAD,CACIY,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAE/B,cAAC,EAAD,IACA,sBAAKjB,UAAU,WAAf,UACI,yBAAQI,QAASG,EAAelB,KAAK,SAASW,UAAU,UAAxD,iCACwB,cAAC,IAAD,CAAiBY,KAAMM,SAE/C,yBAAQd,QAASG,EAAelB,KAAK,SAASW,UAAU,UAAxD,kCACyB,cAAC,IAAD,CAAiBY,KAAMO,gB,gBCkC7CC,EApED,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAASC,EAAc,EAAdA,QAAc,EACN7C,oBAAS,GADH,mBAC7B8C,EAD6B,KACpBC,EADoB,OAEJ/C,mBAAS4C,EAASI,MAFd,mBAE7BC,EAF6B,KAEnBC,EAFmB,KAG9BC,EAAa,uCAAG,sBAAApC,EAAA,0DACPqC,OAAOC,QAAQ,+CADR,gCAKR1D,EAAU2D,IAAV,iBAAwBV,EAASW,KAAMC,SAL/B,uBAMR3D,EAAe4D,WAAWb,EAASc,eAAeF,SAN1C,2CAAH,qDASbG,EAAiB,kBAAMZ,GAAW,SAAAnB,GAAI,OAAKA,MAC3Cd,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACbL,EAAMM,iBADO,SAGPrB,EAAU2D,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAChDZ,KAAMC,IAJG,OAMbF,GAAW,GANE,2CAAH,sDAcd,OACA,qBAAKxB,UAAU,QAAf,SACKuB,EACG,qCACA,uBAAMhC,SAAUA,EAAUS,UAAU,sBAApC,UACI,uBACIC,KAAK,OACLC,YAAY,kBACZZ,MAAOoC,EACPvB,UAAQ,EACRmC,WAAS,EACTpD,SAjBC,SAACC,GAAW,IAEZG,EACTH,EADAC,OAASE,MAEbqC,EAAYrC,IAcAU,UAAU,cAEd,uBAAOC,KAAK,SAASX,MAAM,eAAeU,UAAU,eAExD,sBAAMI,QAASgC,EAAepC,UAAU,oBAAxC,uBAKJ,qCACI,6BAAKqB,EAASI,OACbJ,EAASc,eACN,qBAAKI,IAAKlB,EAASc,cAAeK,MAAM,OAAOC,OAAO,SAEzDnB,GACD,sBAAKoB,MAAM,iBAAX,UACI,sBAAMtC,QAASwB,EAAf,SACA,cAAC,IAAD,CAAiBhB,KAAM+B,QAEvB,sBAAMvC,QAASgC,EAAf,SACA,cAAC,IAAD,CAAiBxB,KAAMgC,iB,QCgCxBC,EA1FM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACVrE,mBAAS,IADC,mBAC7BsE,EAD6B,KACtBC,EADsB,OAEAvE,mBAAS,IAFT,mBAE7BwE,EAF6B,KAEjBC,EAFiB,KAG9B3D,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACD,KAAVuD,EADW,oDAIf5D,EAAMM,iBACF0C,EAAgB,GACD,KAAfc,EANW,wBAOPE,EAAgB7E,EACnB8E,MACAC,MAFmB,UAEVP,EAAQQ,IAFE,YAEKC,gBATd,SAUUJ,EAAcK,UAAUP,EAAY,YAV9C,cAUPQ,EAVO,iBAWSA,EAASL,IAAIM,iBAXtB,QAWbvB,EAXa,sBAaTd,EAAW,CACfI,KAAMsB,EACNY,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQQ,IACnBnB,iBAjBa,UAmBT/D,EAAU2F,WAAW,UAAUC,IAAI3C,GAnB1B,QAoBf2B,EAAS,IACTE,EAAc,IArBC,4CAAH,sDA4Cd,OACE,uBAAM3D,SAAUA,EAAUS,UAAU,cAApC,UACE,sBAAKA,UAAU,0BAAf,UACE,uBACEA,UAAU,sBACVV,MAAOyD,EACP7D,SA3BS,SAACC,GAAW,IAEfG,EACRH,EADFC,OAAUE,MAEZ0D,EAAS1D,IAwBHW,KAAK,OACLC,YAAY,uBACZ+D,UAAW,MAEb,uBAAOhE,KAAK,SAASX,MAAM,SAASU,UAAU,2BAEhD,wBAAOkE,IAAI,cAAclE,UAAU,sBAAnC,UACE,8CACA,cAAC,IAAD,CAAiBY,KAAMuD,SAE3B,uBACInC,GAAG,cACH/B,KAAK,OACLmE,OAAO,UACPlF,SApCe,SAACC,GAAW,IAIzBkF,EADFlF,EADFC,OAAUkF,MAEU,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IAElBC,EACfD,EADFE,cAAiBD,OAEnBzB,EAAcyB,IAEhBJ,EAAOM,cAAcR,IAyBjBrD,MAAO,CACL8D,QAAS,KAGZ7B,GACC,sBAAKjD,UAAU,0BAAf,UACA,qBACEuC,IAAKU,EACLjC,MAAO,CACL+D,gBAAiB9B,KAGrB,sBAAKjD,UAAU,qBAAqBI,QAnChB,kBAAM8C,EAAc,KAmCxC,UACE,0CACA,cAAC,IAAD,CAAiBtC,KAAMoE,gBCpClBC,EA/CF,SAAC,GAAiB,IAAfnC,EAAc,EAAdA,QAAc,EAECrE,mBAAS,IAFV,gCAGGA,mBAAS,KAHZ,mBAGnByG,EAHmB,KAGXC,EAHW,OAIU1G,mBAAS,IAJnB,6BAgC1B,OAbA2G,qBAAU,WAKFhH,EAAU2F,WAAW,UAAUsB,YAAW,SAAAC,GAC1C,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAAA1D,GAAG,oBACpCC,GAAGD,EAAIC,IACRD,EAAIpC,WAEXwF,EAAWI,QAEZ,IAEC,sBAAKvF,UAAU,YAAf,UACI,cAAC,EAAD,CAAc8C,QAASA,IACvB,qBAAK9B,MAAO,CAAE0E,UAAW,IAAzB,SACCR,EAAOO,KAAI,SAAC1C,GAAD,OACZ,cAAC,EAAD,CAEA1B,SAAU0B,EACVzB,QAASyB,EAAMe,YAAchB,EAAQQ,KAFhCP,EAAMf,aCxCR,cAA+B,IAA5B2D,EAA2B,EAA3BA,YAAa7C,EAAc,EAAdA,QACvB8C,EAAUC,cAD2B,EAECpH,mBAASqE,EAAQgD,aAFlB,mBAEpCC,EAFoC,KAEpBC,EAFoB,KAarCzG,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBACHqD,EAAQgD,cAAgBC,EAFZ,gCAGPjD,EAAQmD,cAAc,CAC1BH,YAAaC,IAJF,OAMbJ,IANa,2CAAH,sDAqBd,OACE,sBAAK3F,UAAU,YAAf,UACE,uBAAMT,SAAUA,EAAUS,UAAU,cAApC,UACE,uBACEd,SA/BS,SAACC,GAAW,IAEfG,EACRH,EADFC,OAAUE,MAEZ0G,EAAkB1G,IA4BZW,KAAK,OACLqC,WAAS,EACTpC,YAAY,eACZZ,MAAOyG,EACP/F,UAAU,cAEZ,uBACEC,KAAK,SACLX,MAAM,iBACNU,UAAU,UACVgB,MAAO,CACL0E,UAAW,SAIjB,sBAAM1F,UAAU,2BAA2BI,QAnDzB,WACpBlC,EAAYgI,UACZN,EAAQO,KAAK,MAiDX,yBCxBSC,EA5BI,SAAC,GAAD,IAAGtD,EAAH,EAAGA,QAAH,OAAiB,8BAChC,qBAAI9B,MAAO,CAAEqF,QAAS,OAAQC,eAAgB,SAAUZ,UAAW,IAAnE,UACI,6BACI,cAAC,IAAD,CAAMa,GAAG,IAAIvF,MAAO,CAAEwF,YAAa,IAAnC,SACA,cAAC,IAAD,CAAiB5F,KAAMC,IAAWC,MAAO,UAAWC,KAAK,WAG7D,6BACI,eAAC,IAAD,CACAwF,GAAG,WACHvF,MAAO,CACHyF,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,IAPd,UAUA,cAAC,IAAD,CAAiBhG,KAAMiG,IAAQ/F,MAAO,UAAWC,KAAK,OACtD,sBAAMC,MAAO,CAAE0E,UAAW,IAA1B,SACK5C,EAAQgD,YAAR,UACIhD,EAAQgD,YADZ,kBAEC,uBCcHgB,EAnCG,SAAC,GAAwC,IAAvCnB,EAAsC,EAAtCA,YAAaoB,EAAyB,EAAzBA,WAAYjE,EAAa,EAAbA,QACzC,OACI,eAAC,IAAD,WACKiE,GAAc,cAAC,EAAD,CAAYjE,QAASA,IACpC,cAAC,IAAD,UACKiE,EACD,sBACI/F,MAAO,CACPgG,SAAU,IACVxE,MAAO,OACPyE,OAAQ,SACRvB,UAAW,GACXW,QAAS,OACTC,eAAgB,UAPpB,UAUA,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAM,IAAnB,SACI,cAAC,EAAD,CAAMrE,QAASA,MAEnB,cAAC,IAAD,CAAOoE,OAAK,EAACC,KAAM,WAAnB,SACI,cAACC,EAAD,CAAStE,QAASA,EAAS6C,YAAaA,SAI5C,mCACA,cAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,cCiCLE,MA9Df,WAAgB,IAAD,EACW5I,oBAAS,GADpB,mBACN6I,EADM,KACAC,EADA,OAIiB9I,mBAAS,MAJ1B,mBAINqE,EAJM,KAIG0E,EAJH,KAgDb,OA3CApC,qBAAU,WAERlH,EAAYuJ,oBAAmB,SAACC,GAQ5BF,EAPCE,EAOU,CACT5B,YAAa4B,EAAK5B,YAClBxC,IAAKoE,EAAKpE,IACV2C,cAAe,SAAC0B,GAAD,OAAUD,EAAKzB,cAAc0B,KAKnC,MAEbJ,GAAQ,QAET,IAsBH,mCACCD,EACC,cAAC,EAAD,CACA3B,YAvBkB,WAClB,IAAM+B,EAAOxJ,EAAY0J,YAEzBJ,EAAW,CACT1B,YAAa4B,EAAK5B,YAClBxC,IAAKoE,EAAKpE,IACV2C,cAAe,SAAC0B,GAAD,OAAUD,EAAKzB,cAAc0B,OAkB9CZ,WAAYc,QAAQ/E,GACpBA,QAASA,IAGR,qB,MCxDLgF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.56f5a2b7.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId:  process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\n//export default firebase.initializeApp(firebaseConfig);\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth(); //firebase 관련 모든 것을 export 하는 대신 서비스만 export 할 수 있음\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst inputStyles = {};\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] =  useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    const onChange = (event) => {\r\n        //console.log(event.target.name);\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if (name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault(); //기본 행위가 실행되는 것을 막아서 내가 컨트롤 할 수 있도록 해줌\r\n        try {\r\n            let data;\r\n            if (newAccount) { //create account\r\n            data = await authService.createUserWithEmailAndPassword(email, password);\r\n        } else { //log in\r\n            data = await authService.signInWithEmailAndPassword(email, password);\r\n        }\r\n        console.log(data);\r\n    } catch(error){\r\n        setError(error.message);\r\n    }};\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n            <input name=\"email\" \r\n            type=\"email\" \r\n            placeholder=\"Email\" \r\n            required value={email}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n            />\r\n            <input name=\"password\" \r\n            type=\"password\" \r\n            placeholder=\"Password\" \r\n            required value={password}\r\n            className=\"authInput\"\r\n            onChange={onChange}\r\n            />\r\n            <input type=\"submit\" \r\n            className=\"authInput authSubmit\"\r\n            value={newAccount ? \"Create Account\" : \"Sign In\"} \r\n            />\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n            {newAccount ? \"Sign In\" : \"Create Account\"}\r\n        </span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    \r\n    const onSocialClick = async (event) => {\r\n        const { //ES6\r\n            target:{name},\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n        <AuthForm />\r\n        <div className=\"authBtns\">\r\n            <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                Continue with Google<FontAwesomeIcon icon={faGoogle} />\r\n            </button>\r\n            <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n          </button>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ( {nweetObj,isOwner} ) => {\r\n    const [editing, setEditing] = useState(false); //editing mode인지 아닌지를 알려줌\r\n    const [newNweet, SetNewNweet] = useState(nweetObj.text); //input에 입력된 text를 업데이트 해줌\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        //console.log(ok);\r\n        if(ok){\r\n            //delete\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing =  () => setEditing(prev => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        //console.log(nweetObj, newNweet);\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        SetNewNweet(value);\r\n    };\r\n    return (\r\n    <div className=\"nweet\">\r\n        {editing ? (\r\n            <>\r\n            <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Edit your nweet\" \r\n                    value={newNweet} \r\n                    required \r\n                    autoFocus\r\n                    onChange={onChange}\r\n                    className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n            </form>\r\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n            </span>\r\n            </>\r\n        ) : (\r\n        <>\r\n            <h4>{nweetObj.text}</h4>\r\n            {nweetObj.attachmentUrl && (\r\n                <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n            )}\r\n            {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n                <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n            </div>\r\n            )}\r\n        </> \r\n        )}\r\n    </div>\r\n    );\r\n};\r\nexport default Nweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n        return;\r\n      }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n    <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n        <img\r\n          src={attachment}\r\n          style={{\r\n            backgroundImage: attachment,\r\n          }}\r\n        />\r\n        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n          <span>Remove</span>\r\n          <FontAwesomeIcon icon={faTimes} />\r\n        </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    //console.log(userObj);\r\n    const [nweet, setNeweet] = useState(\"\");\r\n    const [nweets, setNeweets] = useState([]);\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    /*const getNeweets = async() => {\r\n        //get은 QuarySnapshot을 return\r\n        const dbNweets = await dbService.collection(\"nweets\").get();\r\n        //내 state에 있는 각각의 document.data()를 console.log\r\n        dbNweets.forEach((document) => //console.log(document.data())); \r\n        { const nweetObject = {\r\n            ...document.data(),\r\n            id: document.id,\r\n        };\r\n            //모든 이전 nweets에 대해 배열을 리턴, 그 배열은 새로 작성한 트윗과 그 이전 것들\r\n            //값 대신에 함수를 전달할 수 있음, 함수를 전달하면 리액트는 이전 값에 접근할 수 있게 해줌\r\n            setNeweets(prev => [nweetObject, ...prev]);\r\n        });\r\n    };*/\r\n    useEffect(() => {\r\n        //getNeweets();\r\n        //위 방식과 이것 중 하나 선택해서 쓰면 됨\r\n        //이 방식은 더 적게 re-render 하기 때문에 더 빠르게 실행되도록 만들어줌\r\n        //무언가를 지우거나 업데이트 하든, 뭘 하든 실행이 됨\r\n            dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id:doc.id,\r\n            ...doc.data(),\r\n        }));\r\n        setNeweets(nweetArray);\r\n        });\r\n    }, []);\r\n    return(\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n            {nweets.map((nweet) => (\r\n            <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if(userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  /*const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n    console.log(nweets.docs.map((doc) => doc.data()));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);*/\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange} \r\n          type=\"text\" \r\n          autoFocus\r\n          placeholder=\"Display name\" \r\n          value={newDisplayName}\r\n          className=\"fromInput\"\r\n        />\r\n        <input \r\n          type=\"submit\" \r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }} \r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link\r\n            to=\"/profile\"\r\n            style={{\r\n                marginLeft: 10,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                fontSize: 12,\r\n            }}\r\n            >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n                {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\nexport default Navigation;","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? ( \r\n                <div\r\n                    style={{\r\n                    maxWidth: 890,\r\n                    width: \"100%\",\r\n                    margin: \"0 auto\",\r\n                    marginTop: 80,\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                <Route exact path =\"/\">\r\n                    <Home userObj={userObj} />\r\n                </Route> \r\n                <Route exact path =\"/profile\">\r\n                    <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                </Route>\r\n                </div>\r\n                ) : ( \r\n                <>\r\n                <Route exact path=\"/\">\r\n                    <Auth />\r\n                </Route>\r\n                </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, {useState, useEffect} from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  //const auth = fbase.auth();\n  //const [isLoggedIn, setIsLoggedIn] = useState(false); //userObj를 이용해 isLoggedIn 판별 (render를 하나 줄여줌)\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => { //component가 mount 될 때 실행\n    //실제로 로그인이 되었는지 안되었는지 알 수 있음\n    authService.onAuthStateChanged((user) => { //로그인, 로그아웃, 어플리케이션이 초기화 될 때 발생\n      if(user) {\n        //setIsLoggedIn(true); \n        \n        /*방법 2\n        setUserObj(user); //로그인한 user를 저장*/\n        \n        //방법1\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n\n\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    //방법1\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n\n    /*방법2\n    setUserObj(Object.assign({}, user));*/\n  };\n\n  /*firebase가 초기화되고 모든 걸 로드할 때까지 기다려줄 시간이 없음\n  console.log(authService.currentUser);\n  setInterval(() => {\n    console.log(authService.currentUser);\n  }, 2000);*/\n  \n  return (\n  <>\n  {init ? (\n    <AppRouter\n    refreshUser={refreshUser} \n    isLoggedIn={Boolean(userObj)} \n    userObj={userObj} \n    />\n    )\n   : \"Initializing...\"}\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}